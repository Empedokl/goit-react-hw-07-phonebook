{"version":3,"sources":["redux/contacts/contacts-action.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selector.js","Components/Contacts/ContactsStyledComponent.js","Components/Contacts/Contacts.js","Components/ContactForm/ContactFormStyledComponent.js","Components/ContactForm/ContactForm.js","Components/Filter/FilterStyledComponents.js","Components/Filter/Filter.js","Components/App/App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["actions","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","operation","addContact","name","number","dispatch","a","contact","action","post","response","data","deleteContact","contactId","delete","fetchContacts","get","getContacts","state","contacts","getFilter","filter","selectors","visibleContacts","createSelector","allContacts","toLowerCase","includes","List","styled","ul","ListItem","li","Contacts","useSelector","contactsSelectors","useDispatch","map","id","type","onClick","contactsOperation","Form","form","FormLabel","label","FormInput","input","FormButton","button","ContactForm","useState","setName","setNumber","handleInput","target","value","onSubmit","e","preventDefault","some","alert","onChange","placeholder","required","FilterContainer","Filter","App","useEffect","className","length","createReducer","_","payload","isLoading","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af258d62.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\nconst fetchContactRequest = createAction('contact/fetchContactRequest');\nconst fetchContactSuccess = createAction('contact/fetchContactSuccess');\nconst fetchContactError = createAction('contact/fetchContactError');\n\nconst addContactRequest = createAction('contact/addContactRequest');\nconst addContactSuccess = createAction('contact/addContactSuccess');\nconst addContactError = createAction('contact/addContactError');\n\nconst deleteContactRequest = createAction('contact/deleteContactRequest');\nconst deleteContactSuccess = createAction('contact/deleteContactSuccess');\nconst deleteContactError = createAction('contact/deleteContactError');\n\nconst changeFilter = createAction('contact/changeFilter');\n\nconst actions = {\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n};\n\nexport default actions;\n","import axios from 'axios';\nimport action from './contacts-action';\nconst BASE_URL = 'http://localhost:4040/';\naxios.defaults.baseURL = BASE_URL;\n\nconst fetchContacts = () => async dispatch => {\n  dispatch(action.fetchContactRequest());\n  try {\n    const response = await axios.get('/contacts');\n    dispatch(action.fetchContactSuccess(response.data));\n  } catch (error) {\n    dispatch(action.fetchContactError(error));\n  }\n};\n\nconst addContact = (name, number) => async dispatch => {\n  const contact = {\n    name,\n    number,\n  };\n  dispatch(action.addContactRequest());\n  try {\n    const response = await axios.post('/contacts', contact);\n    dispatch(action.addContactSuccess(response.data));\n  } catch (error) {\n    dispatch(action.addContactError(error));\n  }\n};\n\nconst deleteContact = contactId => async dispatch => {\n  dispatch(action.deleteContactRequest());\n  try {\n    await axios.delete(`/contacts/${contactId}`);\n    dispatch(action.deleteContactSuccess(contactId));\n  } catch (error) {\n    dispatch(action.deleteContactError(error));\n  }\n};\n\nconst operation = {\n  addContact,\n  deleteContact,\n  fetchContacts,\n};\n\nexport default operation;\n","import { createSelector } from '@reduxjs/toolkit';\nconst getContacts = state => state.contacts;\nconst getFilter = state => state.filter;\n\nconst visibleContacts = createSelector(\n  [getContacts, getFilter],\n  (allContacts, filter) =>\n    allContacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    ),\n);\n\nconst selectors = {\n  getContacts,\n  getFilter,\n  visibleContacts,\n};\n\nexport default selectors;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  padding: 0;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n\n  &:not(:last-child) {\n    margin-bottom: 5px;\n  }\n`;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsSelectors, contactsOperation } from '../../redux/contacts';\nimport { List, ListItem } from './ContactsStyledComponent';\n\nfunction Contacts() {\n  const contacts = useSelector(contactsSelectors.visibleContacts);\n  const dispatch = useDispatch();\n\n  return (\n    <List>\n      {contacts.map(({ id, name, number }) => {\n        return (\n          <ListItem key={id}>\n            <span>{name}:</span>\n            <span>{number}</span>\n            <button\n              type=\"button\"\n              onClick={() => dispatch(contactsOperation.deleteContact(id))}\n            >\n              Delete\n            </button>\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n}\n\nexport default Contacts;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  margin: 0 auto;\n`;\n\nexport const FormLabel = styled.label`\n  display: block;\n  font-size: 20px;\n  margin-bottom: 10px;\n`;\n\nexport const FormInput = styled.input`\n  display: block;\n  width: 200px;\n  font-size: 13px;\n  padding: 6px 0 4px 10px;\n  border: 1px solid #ccc;\n  background: #f6f6f6;\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const FormButton = styled.button`\n  width: 90px;\n  height: 28px;\n  border: 1px solid #ccc;\n  background: #fff;\n  color: #666;\n  border-radius: 5px;\n  cursor: pointer;\n\n\n  &:active {\n    margin-top: 1px;\n    margin-bottom: -1px;\n    zoom: 1;\n  }\n`;\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsSelectors, contactsOperation } from '../../redux/contacts';\nimport {\n  Form,\n  FormLabel,\n  FormInput,\n  FormButton,\n} from './ContactFormStyledComponent';\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(contactsSelectors.getContacts);\n  const dispatch = useDispatch();\n\n  const handleInput = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const isContactAlready = () =>\n    contacts?.some(contact => contact.name === name);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (isContactAlready()) {\n      alert(`${name} is already in contacts!`);\n      return;\n    }\n    dispatch(contactsOperation.addContact(name, number));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <FormLabel>\n        Name\n        <FormInput\n          type=\"text\"\n          value={name}\n          name=\"name\"\n          onChange={handleInput}\n          placeholder=\"Name*\"\n          required\n        />\n      </FormLabel>\n      <FormLabel>\n        Number\n        <FormInput\n          type=\"number\"\n          value={number}\n          name=\"number\"\n          onChange={handleInput}\n          placeholder=\"111-11-11*\"\n          required\n        />\n      </FormLabel>\n      <FormButton type=\"submit\">Add contact</FormButton>\n    </Form>\n  );\n}\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const FilterContainer = styled.label`\n  font-size: 18px;\n`;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport actions from '../../redux/contacts/contacts-action';\nimport { FilterContainer } from './FilterStyledComponents';\nimport { contactsSelectors } from '../../redux/contacts';\n\nfunction Filter() {\n  const filter = useSelector(contactsSelectors.getFilter);\n  const dispatch = useDispatch();\n  return (\n    <FilterContainer>\n      Find contacts by name\n      <input\n        type=\"text\"\n        value={filter}\n        onChange={e => dispatch(actions.changeFilter(e.target.value))}\n      />\n    </FilterContainer>\n  );\n}\n\nexport default Filter;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsSelectors, contactsOperation } from '../../redux/contacts';\nimport Contacts from '../Contacts';\nimport ContactForm from '../ContactForm';\nimport Filter from '../Filter';\n\nexport default function App() {\n  const contacts = useSelector(contactsSelectors.getContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => dispatch(contactsOperation.fetchContacts()), [dispatch]);\n\n  return (\n    <section className=\"section\">\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      {contacts?.length > 0 && <Filter />}\n      {contacts?.length > 0 && <Contacts />}\n    </section>\n  );\n}\n","import { createReducer } from '@reduxjs/toolkit';\nimport actions from './contacts-action';\n\nexport const contacts = createReducer([], {\n  [actions.fetchContactSuccess]: (_, { payload }) => payload,\n  [actions.addContactSuccess]: (state, { payload }) => [...state, payload],\n  [actions.deleteContactSuccess]: (state, { payload }) => {\n    return state.filter(({ id }) => id !== payload);\n  },\n});\n\nexport const isLoading = createReducer(false, {\n  [actions.fetchContactRequest]: () => true,\n  [actions.fetchContactSuccess]: () => false,\n  [actions.fetchContactError]: () => false,\n  [actions.addContactRequest]: () => true,\n  [actions.addContactSuccess]: () => false,\n  [actions.addContactError]: () => false,\n  [actions.deleteContactRequest]: () => true,\n  [actions.deleteContactSuccess]: () => false,\n  [actions.deleteContactError]: () => false,\n});\n\nexport const filter = createReducer('', {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport { contacts, filter, isLoading } from './contacts/contacts-reducer';\n\nexport const store = configureStore({\n  reducer: {\n    contacts,\n    filter,\n    isLoading,\n  },\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './Components/App';\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}